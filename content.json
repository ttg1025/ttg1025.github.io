{"meta":{"title":"程序人生","subtitle":"博客日志","description":"","author":"gtt1025","url":"http://example.com","root":"/"},"pages":[{"title":"categories","date":"2020-10-20T01:58:59.000Z","updated":"2020-10-20T01:59:47.003Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-10-20T02:03:19.000Z","updated":"2020-10-20T02:03:49.243Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"关于我","date":"2020-10-20T02:07:02.000Z","updated":"2020-10-20T02:14:43.425Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"时间非常珍贵，莫要白白荒废它！"}],"posts":[{"title":"hexo+Github搭建个人博客","slug":"hexo+Github搭建个人博客","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:31:08.644Z","comments":true,"path":"2020/09/26/hexo+Github搭建个人博客/","link":"","permalink":"http://example.com/2020/09/26/hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"所需环境Windows10npm 6.14.6node.js v12.18.4githexo 安装Node.jsNode.js查看版本 12node -vnpm -v hexo安装hexo1npm install -g hexo-cli 初始化cd到一个指定目录 1hexo init blog blog是将要建立文件夹的名字cd到blog下面，安装npm 1npm install 开启本地服务器 1hexo s 此时，浏览器中打开网址(默认是4000端口) http://localhost:4000至此播客一搭建成功，接下来配置github 配置github创建名为xxx.github.io的仓库，README初始化也要勾上，名称要与github名称一样，你如github名称为ttg1025，那么仓库就要名为ttg1025.github.io 点击settings，向下拉到最后有一个 Github Pages ，点击 choose a theme 选择一个主题. 打开仓库添加一个index.html,随便写点内容打开地址http://ttg1025.github.io就可以看到了 配置ssh keygit教程就不再赘述 部署到github连接本地和github 修改根目录下的 _config.yml 1234deploy: type: git repository: git@github.com:ttg1025&#x2F;ttg1025.github.io.git branch: master 安装部署插件 hexo-deployer-git1npm install hexo-deployer-git --save 执行以下命令发布 1hexo d -g 打开地址http://ttg1025.github.io就可以看到了 绑定域名阿里云解析域名在阿里云购买域名后，解析域名 github绑定域名点击github仓库中的settings，拉到github上的Github Pages，填上购买的域名点击保存后，Github Pages会自动生成一个CNAME，CNAME中填写的就是域名 常用指令12345hexo new &quot;postName&quot; &#x2F;&#x2F;新建文章hexo new page &quot;pageName&quot; &#x2F;&#x2F;新建页面hexo g &#x2F;&#x2F;生成静态页面至public目录hexo server &#x2F;&#x2F;开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）hexo deploy &#x2F;&#x2F;将.deploy目录部署到GitHub 常用组合123hexo cleanhexo ghexo d","categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-20T02:04:22.057Z","comments":true,"path":"2020/09/26/hello-world/","link":"","permalink":"http://example.com/2020/09/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"测试","slug":"测试","permalink":"http://example.com/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"HelloWorld","slug":"HelloWorld","permalink":"http://example.com/tags/HelloWorld/"}]},{"title":"hexo博客添加分类、标签","slug":"hexo博客添加分类、标签","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:39:18.725Z","comments":true,"path":"2020/09/26/hexo博客添加分类、标签/","link":"","permalink":"http://example.com/2020/09/26/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E3%80%81%E6%A0%87%E7%AD%BE/","excerpt":"","text":"创建”分类”标签进入博客根目录，执行命令 1$ hexo new page categories 成功后，会生成index.md,打开后添加type: “categories” 12345---title: categoriesdate: 2020-10-20 09:58:59type: &quot;categories&quot;--- 给文章添加分类属性 1234567---title: Hello Worlddate: 2020-09-26 12:12:57categories: - 测试--- 创建”标签”目录进入博客根目录，执行命令 1$ hexo new page tags 成功后，会生成index.md,打开后添加type: “tags” 12345---title: tagsdate: 2020-10-20 09:58:59type: &quot;tags&quot;--- 给文章添加标签属性 123456789---title: Hello Worlddate: 2020-09-26 12:12:57categories: - 测试tags:- HelloWorld--- 添加”关于”页面执行命令 1hexo new page &quot;about&quot; 更改主题配置文件 123456789101112menu: home: &#x2F; || fa fa-home about: &#x2F;about&#x2F; || fa fa-user tags: &#x2F;tags&#x2F; || fa fa-tags categories: &#x2F;categories&#x2F; || fa fa-th archives: &#x2F;archives&#x2F; || fa fa-archive #schedule: &#x2F;schedule&#x2F; || fa fa-calendar #sitemap: &#x2F;sitemap.xml || fa fa-sitemap #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat # schedule: &#x2F;schedule&#x2F; || calendar # 日历 # sitemap: &#x2F;sitemap.xml || sitemap # 站点地图 # commonweal: &#x2F;404&#x2F; || heartbeat # 腾讯公益404 然后修改source/about/目录中的index.md文件即可","categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"Ubantu+Django+Uwsgi+Nginx部署博客","slug":"Ubantu+Django+Uwsgi+Nginx部署博客","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:35:27.368Z","comments":true,"path":"2020/09/26/Ubantu+Django+Uwsgi+Nginx部署博客/","link":"","permalink":"http://example.com/2020/09/26/Ubantu+Django+Uwsgi+Nginx%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"环境腾讯云 Ubuntu 16.04.1 LTS Django2.0.8 Python3.6.12 Nginx1.10.3 Git 安装Python3.6.12博客部署需要3.6版本的Python 12345sudo suapt-get install software-properties-commonadd-apt-repository ppa:jonathonf&#x2F;python-3.6apt-get updateapt-get install python3.6 使终端默认打开我们安装的python3.6 123cd &#x2F;usr&#x2F;binrm python3ln -s python3.6 python3 安装pip3安装pip用来安装Python的各种包 12345apt-get install python3-pipcd &#x2F;usr&#x2F;binrm pip3ln -s pip3.6 pip3pip3 install --upgrade pip 安装虚拟环境virtualenv1pip3 install virtualenv 选择一个存放虚拟环境的目录 1cd &#x2F;home 创建并激活虚拟环境 12virtualenv djangosource &#x2F;home&#x2F;django&#x2F;bin&#x2F;activate 下载博客源码安装git 12345apt-get install gitcd &#x2F;home&#x2F;mysitegit initgit remote add origin github地址git pull origin master 安装网站所需的Python包首先,进入到Django虚拟环境中，使用如下命令激活环境: 1source &#x2F;home&#x2F;django&#x2F;bin&#x2F;activate 然后，安装Python包 1pip install -r requirements.txt 安装Mysql12345cd &#x2F;homewget https:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql-apt-config_0.8.12-1_all.debdpkg -i mysql-apt-config_0.8.12-1_all.deb # 选择8.0即可apt-get updateapt-get install mysql-server 创建博客的数据库，要与base.py或者settings.py中的数据库一样 1CREATE DATABASE &#96;数据库名&#96; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; 在网站根目录创建数据库 12python manage.py makemigrationspython manage.py migrate 如果出现报错，可指定具体应用，这个应用一定要添加到settings.py中的INSTALLED_APPS里 12python manage.py makemigrations blogpython manage.py migrate 运行博客切换到根目录运行 1python manage.py runserver 0.0.0.0:80 0.0.0.0:80表示任意ip可访问 安装配置uwsgi安装uwsgi和所需工具包 123apt-get install python3.6-devpip3 install uwsgiuwsgi --http :8888 --chdir &#x2F;home&#x2F;mysite&#x2F;DjangoBlog --home &#x2F;home&#x2F;django --module djangoblog.wsgi:application –http ：用于指定端口，这里指定8888 –chdir：用于指定网站根目录 –home：用于指定虚拟环境地址 –module：settings.py中的WSGI_APPLICATION，用于指定项目地址 执行命令太麻烦，配置一下在/home下新建mysite_uwsgi目录，然后新建Mysite.ini配置文件用来保存uwsgi的配置文件 1234cd &#x2F;homemkdir mysite_uwsgicd mysite_uwsgivim mysite.ini 写入下面的内容 123456789101112131415[uwsgi]chdir &#x3D; &#x2F;home&#x2F;mysite&#x2F;djangobloghome &#x3D; &#x2F;home&#x2F;djangomodule &#x3D; djangoblog.wsgi:applicationmaster &#x3D; Trueprocesses &#x3D; 4max-requests &#x3D; 5000harakiri &#x3D; 60socket &#x3D; :8888uid &#x3D; rootgid &#x3D; rootpidfile &#x3D; &#x2F;home&#x2F;mysite_uwsgi&#x2F;master.piddaemonize &#x3D; &#x2F;home&#x2F;mysite_uwsgi&#x2F;mysite.logvacuum &#x3D; Truebufffer_size &#x3D; 66536 #缓存不能太小 打开uwsgi 1uwsgi --ini &#x2F;home&#x2F;mysite_uwsgi&#x2F;mysite.ini 检查uwsgi是否启动成功的命令 1ps -aux | grep uwsgi 安装配置nginx安装nginx 1apt-get install nginx 修改配置文件 12cd &#x2F;etc&#x2F;nginx&#x2F;sites-availablevim mysite.conf 写入下面内容 1234567891011121314151617181920212223242526upstream django &#123; server ip:8888; # for a web port socket (we&#39;ll use this first)&#125;server&#123; listen 80; server_name mysite; charset utf-8; client_max_body_size 75M; #上传文件大小限制 # 网站静态文件所在目录 location &#x2F;static&#123; alias &#x2F;home&#x2F;mysite&#x2F;DjangoBlog&#x2F;static; &#125; # 上传文件所在目录 location &#x2F;media&#123; alias &#x2F;home&#x2F;mysite&#x2F;DjangoBlog&#x2F;media; &#125; # 动态文件交给uwsgi处理 location &#x2F; &#123; uwsgi_pass ip:8888; include &#x2F;etc&#x2F;nginx&#x2F;uwsgi_params; &#125;&#125; 网站静态文件所在目录一定要配置正确 uwsgi和nginx通信时，要么都用socket，要么都用http；用http时，uwsgi的配置文件中要用内网ip，nignx用公网 如果/home/mysite/DjangoBlog目录下没有static目录，配置settings.py 1234567# 静态文件路径STATIC_URL = &#x27;/static/&#x27;#STATIC_ROOT = os.path.join(BASE_DIR,&#x27;static/&#x27;)STATIC_ROOT = &#x27;F:\\Python\\blog\\DjangoBlog\\apps\\blog\\staic&#x27;STATICFILES_DIRS=[os.path.join(BASE_DIR,&#x27;static/&#x27;)，] 然后执行,收集static文件 1python manage.py collectstatic 执行完毕后，再改回来 1234567# 静态文件路径STATIC_URL = &#x27;/static/&#x27;STATIC_ROOT = os.path.join(BASE_DIR,&#x27;static/&#x27;)#STATIC_ROOT = &#x27;F:\\Python\\blog\\DjangoBlog\\apps\\blog\\staic&#x27;STATICFILES_DIRS=[os.path.join(BASE_DIR,&#x27;static/&#x27;)，] 在sites-enabled中创建一个软连接，表示此配置文件已经启用 1ln -s &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;mysite.conf &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;mysite.conf 修改/etc/nginx/nginx.conf，将user后面改为root重启nginx 1service nginx restart 浏览器输入ip访问49.235.229.91","categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"}],"tags":[{"name":"Django","slug":"Django","permalink":"http://example.com/tags/Django/"}]},{"title":"Ubantu常用命令","slug":"Ubantu常用命令","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:35:47.644Z","comments":true,"path":"2020/09/26/Ubantu常用命令/","link":"","permalink":"http://example.com/2020/09/26/Ubantu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"查看端口是否被占用1netstat -tunlp|grep 8888 关掉进程1kill -9 进程号 修改文件夹权限1sudo chmod -R 777 &#x2F;xxx 未完待续…","categories":[{"name":"Ubantu","slug":"Ubantu","permalink":"http://example.com/categories/Ubantu/"}],"tags":[{"name":"Ubantu","slug":"Ubantu","permalink":"http://example.com/tags/Ubantu/"}]},{"title":"Ubantu环境下Git和Github的安装使用","slug":"Ubantu环境下Git和Github的安装使用","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:36:12.375Z","comments":true,"path":"2020/09/26/Ubantu环境下Git和Github的安装使用/","link":"","permalink":"http://example.com/2020/09/26/Ubantu%E7%8E%AF%E5%A2%83%E4%B8%8BGit%E5%92%8CGithub%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/","excerpt":"","text":"Git安装1sudo apt-get isntall git 配置Git12git config --global user.name &quot;Your Name&quot;git config --global user.email &quot;email@example.com&quot; 下载文件1git clone githu上仓库地址 生成并添加密钥生成密钥 1ssh-keygen -t rsa -C &quot;email@example.com&quot; 查看公钥 1cat ~&#x2F;.ssh&#x2F;id_rsa.pub 在github上添加ssh key，测试连接是否成功 1ssh -T git@github.com 使用git在本地文件夹初始化 1git init 添加文件 1git add . 连接远程仓库 1git remote add origin github上仓库地址 托付文件 1git commit -m &quot;first commit&quot; 提交文件 1git push origin master 在提交文件之前可以先拉去文件 1git pull origin master 新建并切换分支新建分支 1git branch [branch name] 切换分支 1git checkout [branch name] 将新分支push到GitHub上 1git push origin [branch name] 切换到主分支 1git checkout master 将分支合并到主分支 1git merge [branch name]","categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"}],"tags":[{"name":"Ubantu","slug":"Ubantu","permalink":"http://example.com/tags/Ubantu/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"VSCode配置C/C++的编译环境","slug":"VSCode配置C-C++的编译环境","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:32:01.427Z","comments":true,"path":"2020/09/26/VSCode配置C-C++的编译环境/","link":"","permalink":"http://example.com/2020/09/26/VSCode%E9%85%8D%E7%BD%AEC-C++%E7%9A%84%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/","excerpt":"","text":"安装vsCodeVSCode 安装C/C++扩展安装编译环境mingw-w64mingw-w64安装完毕之后，配置环境变量，此电脑-属性-高级系统设置-环境变量-系统变量-path-添加一条D:\\mingw\\mingw32\\bin\\（你安装的编译环境的地址） 配置VScodelaunch.json 123456789101112131415161718192021222324252627&#123; &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;(gdb) Launch&quot;, &#x2F;&#x2F; 配置名称，将会在启动配置的下拉菜单中显示 &quot;type&quot;: &quot;cppdbg&quot;, &#x2F;&#x2F; 配置类型，这里只能为cppdbg &quot;request&quot;: &quot;launch&quot;, &#x2F;&#x2F; 请求配置类型，可以为launch（启动）或attach（附加） &quot;program&quot;: &quot;$&#123;workspaceRoot&#125;&#x2F;$&#123;fileBasenameNoExtension&#125;.exe&quot;,&#x2F;&#x2F; 将要进行调试的程序的路径 &quot;args&quot;: [], &#x2F;&#x2F; 程序调试时传递给程序的命令行参数，一般设为空即可 &quot;stopAtEntry&quot;: false, &#x2F;&#x2F; 设为true时程序将暂停在程序入口处，一般设置为false &quot;cwd&quot;: &quot;$&#123;workspaceRoot&#125;&quot;,&#x2F;&#x2F; 调试程序时的工作目录，一般为$&#123;workspaceRoot&#125;即代码所在目录 &quot;environment&quot;: [], &quot;externalConsole&quot;: true,&#x2F;&#x2F; 调试时是否显示控制台窗口，一般设置为true显示控制台 &quot;MIMode&quot;: &quot;gdb&quot;, &quot;miDebuggerPath&quot;: &quot;D:\\\\MinGW\\\\bin\\\\gdb.exe&quot;,&#x2F;&#x2F; miDebugger的路径，注意这里要与MinGw的路径对应 &quot;preLaunchTask&quot;: &quot;g++&quot;, &#x2F;&#x2F; 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc &quot;setupCommands&quot;: [ &#123; &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: true &#125; ] &#125; ]&#125; task.json 1234567891011121314151617181920212223242526272829&#123; &quot;version&quot;: &quot;2.0.0&quot;, &quot;command&quot;: &quot;g++&quot;, &quot;args&quot;: [ &quot;-g&quot;, &quot;$&#123;file&#125;&quot;, &quot;-o&quot;, &quot;$&#123;fileDirname&#125;&#x2F;$&#123;fileBasenameNoExtension&#125;.exe&quot; ], &quot;problemMatcher&quot;: &#123; &quot;owner&quot;: &quot;cpp&quot;, &quot;fileLocation&quot;: [ &quot;relative&quot;, &quot;$&#123;workspaceRoot&#125;&quot; ], &quot;pattern&quot;: &#123; &quot;regexp&quot;: &quot;^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$&quot;, &quot;file&quot;: 1, &quot;line&quot;: 2, &quot;column&quot;: 3, &quot;severity&quot;: 4, &quot;message&quot;: 5 &#125; &#125;, &quot;group&quot;: &#123; &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true &#125; &#125;","categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"}],"tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://example.com/tags/VSCode/"}]},{"title":"将hexo博客的主题更改为next","slug":"将hexo博客的主题更改为next","date":"2020-09-26T04:12:57.000Z","updated":"2020-10-23T09:36:40.294Z","comments":true,"path":"2020/09/26/将hexo博客的主题更改为next/","link":"","permalink":"http://example.com/2020/09/26/%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%94%B9%E4%B8%BAnext/","excerpt":"","text":"更改基本信息更改网站标题、副标题、作者、英文等 12345678# Sitetitle: 程序人生subtitle: &#39;博客日志&#39;description: &#39;&#39;keywords:author: gtt1025language: zh-CNtimezone: &#39;&#39; 安装next在博客根目录下Git Bash 1git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next 打开根目录下的配置文件，将theme修改为next 1theme: next 点击next目录下的配置文件，选择样式主题,这里一般选择Gemini 12345678# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse#scheme: Mist#scheme: Piscesscheme: Gemini 更改菜单栏点击next目录下的配置文件进行修改 123456789101112menu: home: &#x2F; || fa fa-home about: &#x2F;about&#x2F; || fa fa-user tags: &#x2F;tags&#x2F; || fa fa-tags categories: &#x2F;categories&#x2F; || fa fa-th archives: &#x2F;archives&#x2F; || fa fa-archive #schedule: &#x2F;schedule&#x2F; || fa fa-calendar #sitemap: &#x2F;sitemap.xml || fa fa-sitemap #commonweal: &#x2F;404&#x2F; || fa fa-heartbeat # schedule: &#x2F;schedule&#x2F; || calendar # 日历 # sitemap: &#x2F;sitemap.xml || sitemap # 站点地图 # commonweal: &#x2F;404&#x2F; || heartbeat # 腾讯公益404 修改社交信息1234567891011social: GitHub: https:&#x2F;&#x2F;xxxx || fab fa-github E-Mail:xxx@xxx.xx|| fa fa-envelope #Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || fab fa-weibo #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || fab fa-google #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || fab fa-twitter #FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;yourname || fab fa-facebook #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || fab fa-stack-overflow #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || fab fa-youtube #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || fab fa-instagram #Skype: skype:yourname?call|chat || fab fa-skype 圆形头像设置1234567avatar: # Replace the default image and set the url here. url: &#x2F;images&#x2F;gtt.jpg #头像文件目录 # If true, the avatar will be dispalyed in circle. rounded: true # If true, the avatar will be rotated with the cursor. rotated: true","categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}],"categories":[{"name":"工具部署","slug":"工具部署","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2/"},{"name":"测试","slug":"测试","permalink":"http://example.com/categories/%E6%B5%8B%E8%AF%95/"},{"name":"Ubantu","slug":"Ubantu","permalink":"http://example.com/categories/Ubantu/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"HelloWorld","slug":"HelloWorld","permalink":"http://example.com/tags/HelloWorld/"},{"name":"Django","slug":"Django","permalink":"http://example.com/tags/Django/"},{"name":"Ubantu","slug":"Ubantu","permalink":"http://example.com/tags/Ubantu/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"},{"name":"VSCode","slug":"VSCode","permalink":"http://example.com/tags/VSCode/"}]}